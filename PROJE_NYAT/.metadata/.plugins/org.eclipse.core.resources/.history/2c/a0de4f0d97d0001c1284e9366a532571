
public class MerkeziIslemBirimi implements Observer,IMerkeziIslemBirimi {
	SogutucuAc asus = (SogutucuAc) SogutucuFactory.sogutucuOlustur(SogutucuAc.class);
	SogutucuKapat asus1 = (SogutucuKapat) SogutucuFactory.sogutucuOlustur(SogutucuKapat.class);
	public MerkeziIslemBirimi () throws IllegalAccessException, InstantiationException {
	}
	
	Ekran ekran = new Ekran();
    boolean sogutucuDurum = false;
    SicaklikAlgilayici algila = new SicaklikAlgilayici();
    Eyleyici eyleyici = new Eyleyici();
    public void sogutucuAc()
    {
        if(sogutucuDurum == false)
        {
        	asus.mesaj();
        	sogutucuDurum = true;
        }
        else
        	hataMesajiAcik();
    }

    public void sogutucuKapat()
    {
        if(sogutucuDurum == true)
        {
        	asus1.mesaj();
        	sogutucuDurum = false;
        }
        else
        	ekran.mesajGoruntule("Zaten kapali");
    }

    @Override
    public void hataMesajiAcik()
    {
    	 ekran.mesajGoruntule("Arka arkaya iki defa sogutucu acma islemi gerceklestirilemiyor.Tekrar deneyiniz.");
    }
    
    @Override
    public void hataMesajiKapali()
    {
    	 ekran.mesajGoruntule("Sogutucu kapali oldugundan kapatilamiyor.");
    }
    
    public void sicaklikGoster()
    {
    	 ekran.mesajGoruntule("Sicaklik = " + algila.sicaklikDegeri());
    }
}
